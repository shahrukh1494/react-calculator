{"version":3,"sources":["App.js","reportWebVitals.js","index.js","components/Calculator.js"],"names":["App","className","Calculator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","useState","data","setData","length","operators","handleClick","e","i","j","charAt","target","name","slice","addZero","addDecimal","indexOf","lastIndexOf","calculate","eval","toString","err","clear","del","onClick"],"mappings":"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","file":"static/js/main.7d35ed69.chunk.js","sourcesContent":["import Calculator from \"./components/Calculator\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState } from \"react\";\r\n\r\nconst Calculator = () => {\r\n  const [data, setData] = useState(\"\");\r\n  let length = data.length;\r\n  let operators = [\"+\", \"-\", \"/\", \"*\"];\r\n\r\n  const handleClick = (e) => {\r\n    //check for two consecutive signs and replace first with second\r\n    for (let i = 0; i < operators.length; i++) {\r\n      for (let j = 0; j < operators.length; j++) {\r\n        if (\r\n          data.charAt(length - 1) === operators[i] &&\r\n          e.target.name === operators[j]\r\n        ) {\r\n          setData(data.slice(0, length - 1) + e.target.name);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    //check for sign at start except for minus\r\n    if (\r\n      data + e.target.name !== \"+\" &&\r\n      data + e.target.name !== \"/\" &&\r\n      data + e.target.name !== \"*\"\r\n    ) {\r\n      setData(data + e.target.name);\r\n    }\r\n  };\r\n\r\n  const addZero = (e) => {\r\n    //check for zeroes before number\r\n    if (\r\n      data !== \"\" &&\r\n      data.charAt(length - 1) !== \"+\" &&\r\n      data.charAt(length - 1) !== \"-\" &&\r\n      data.charAt(length - 1) !== \"/\" &&\r\n      data.charAt(length - 1) !== \"*\"\r\n    ) {\r\n      setData(data + e.target.name);\r\n    }\r\n  };\r\n\r\n  const addDecimal = (e) => {\r\n    //add only one decimal per number\r\n    if (\r\n      data.indexOf(\".\") === -1 ||\r\n      data.slice(data.lastIndexOf(\"+\") + 1, length + 1).indexOf(\".\") === -1 ||\r\n      data.slice(data.lastIndexOf(\"-\") + 1, length + 1).indexOf(\".\") === -1 ||\r\n      data.slice(data.lastIndexOf(\"/\") + 1, length + 1).indexOf(\".\") === -1 ||\r\n      data.slice(data.lastIndexOf(\"*\") + 1, length + 1).indexOf(\".\") === -1\r\n    ) {\r\n      setData(data + e.target.name);\r\n    }\r\n  };\r\n\r\n  const calculate = () => {\r\n    try {\r\n      //check for blank input and sign at end\r\n      if (\r\n        data !== \"\" &&\r\n        data.charAt(length - 1) !== \"+\" &&\r\n        data.charAt(length - 1) !== \"-\" &&\r\n        data.charAt(length - 1) !== \"/\" &&\r\n        data.charAt(length - 1) !== \"*\"\r\n      ) {\r\n        setData(eval(data).toString());\r\n      }\r\n    } catch (err) {\r\n      setData(\"ERROR! INVALID INPUT\");\r\n    }\r\n  };\r\n\r\n  //CE button function to clear input\r\n  const clear = () => {\r\n    setData(\"\");\r\n  };\r\n\r\n  //C button function for backspace\r\n  const del = () => {\r\n    setData(data.slice(0, length - 1));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"data\">{data}</div>\r\n      <div className=\"keypad\">\r\n        <button className=\"clear\" onClick={clear}>\r\n          CE\r\n        </button>\r\n        <button className=\"delete\" onClick={del}>\r\n          C\r\n        </button>\r\n        <button className=\"operator\" name=\"/\" onClick={handleClick}>\r\n          &divide;\r\n        </button>\r\n        <button name=\"7\" onClick={handleClick}>\r\n          7\r\n        </button>\r\n        <button name=\"8\" onClick={handleClick}>\r\n          8\r\n        </button>\r\n        <button name=\"9\" onClick={handleClick}>\r\n          9\r\n        </button>\r\n        <button name=\"*\" className=\"operator\" onClick={handleClick}>\r\n          &times;\r\n        </button>\r\n        <button name=\"4\" onClick={handleClick}>\r\n          4\r\n        </button>\r\n        <button name=\"5\" onClick={handleClick}>\r\n          5\r\n        </button>\r\n        <button name=\"6\" onClick={handleClick}>\r\n          6\r\n        </button>\r\n        <button name=\"-\" className=\"operator\" onClick={handleClick}>\r\n          -\r\n        </button>\r\n        <button name=\"1\" onClick={handleClick}>\r\n          1\r\n        </button>\r\n        <button name=\"2\" onClick={handleClick}>\r\n          2\r\n        </button>\r\n        <button name=\"3\" onClick={handleClick}>\r\n          3\r\n        </button>\r\n        <button name=\"+\" className=\"operator\" onClick={handleClick}>\r\n          +\r\n        </button>\r\n        <button name=\".\" onClick={addDecimal}>\r\n          .\r\n        </button>\r\n        <button name=\"0\" onClick={addZero}>\r\n          0\r\n        </button>\r\n        <button className=\"result\" onClick={calculate}>\r\n          =\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"],"sourceRoot":""}